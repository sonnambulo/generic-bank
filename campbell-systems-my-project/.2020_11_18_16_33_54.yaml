# Policy generated by Tufin SecureCloud
# Account: campbell-systems
# Cluster: my-project
# Namespaces: [data default tufin-system]
# 
# Notes:
# Please review the policies before applying them.
#
# 1. To apply the policies run:
# kubectl apply -f campbell-systems-my-project.yaml
#
# 2. Each namespace should have a unique 'namespace' label
# The auto-generated policies rely on the namespace label to allow inter-namespace access.
# Run the following command to add labels to all namespaces:                                    
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl label namespace $ns namespace=$ns --overwrite; done
# You can delete these labels with:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl label namespace $ns namespace-; done
#
# 3. To delete Tufin Orca policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol -l tufin-owner=tufin-orca -l tufin-mode=auto-generated --namespace=$ns; done
#
# 4. To delete ALL network policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol --all --namespace=$ns; done
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.admin
    namespace: default
spec:
    ingress:
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: '' # missing label - see note 2 above
    podSelector:
        matchLabels:
            app: admin
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.indexer
    namespace: default
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
      - to:
          - podSelector:
                matchLabels:
                    app: redis
    podSelector:
        matchLabels:
            app: indexer
    policyTypes:
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.redis
    namespace: default
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: indexer
    podSelector:
        matchLabels:
            app: redis
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: tufin-system.kite
    namespace: tufin-system
spec:
    egress:
      - to:
          - ipBlock:
                cidr: 104.155.122.222/32 # guru.tufin.io
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector:
        matchLabels:
            app: kite
    policyTypes:
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.customer
    namespace: default
spec:
    ingress:
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: '' # missing label - see note 2 above
    podSelector:
        matchLabels:
            app: customer
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: tufin-system
    namespace: tufin-system
spec:
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: data
    namespace: data
spec:
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-11-18T16:34:57Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default
    namespace: default
spec:
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
